<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vrealize Orchestrator on Funky Cloud Medina</title>
    <link>https://www.funkycloudmedina.com/tags/vrealize-orchestrator/</link>
    <description>Recent content in Vrealize Orchestrator on Funky Cloud Medina</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 23 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.funkycloudmedina.com/tags/vrealize-orchestrator/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VclAbstractObjectValue - Unable to serialize object</title>
      <link>https://www.funkycloudmedina.com/2018/08/vclabstractobjectvalue---unable-to-serialize-object/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.funkycloudmedina.com/2018/08/vclabstractobjectvalue---unable-to-serialize-object/</guid>
      <description>I&amp;rsquo;ve been working on some automation that will create metadata against objects in vCloud Director using vRealize Orchestrator. If you&amp;rsquo;ve ever had to do this before you&amp;rsquo;ll know how painful it can be to get your head around all of the objects/transformations you need to make before you can even set the metadata to the object.
First you take the metadata value (in this case a string) and create a new VclMetadataStringValue object.</description>
    </item>
    
    <item>
      <title>Enumerate vRO Workflow Inputs into a JSON object</title>
      <link>https://www.funkycloudmedina.com/2018/02/enumerate-vro-workflow-inputs-into-a-json-object/</link>
      <pubDate>Fri, 23 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.funkycloudmedina.com/2018/02/enumerate-vro-workflow-inputs-into-a-json-object/</guid>
      <description>Just this week I had to create a JSON object that contained all of the workflow input parameters and their respective values. While I can&amp;rsquo;t guarantee this is the best way to do it, it definitely works.
I&amp;rsquo;ve tried to keep the comments succinct so if you have any questions please ask.
Code // Get all input parameters for the parent workflow var inParamsArray = workflow.rootWorkflow.inParameters; // Get all input parameters for the current workflow to search through later var paramFinder = workflow.</description>
    </item>
    
  </channel>
</rss>